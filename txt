Proje 1:
Dizi: [22, 27, 16, 2, 18, 6]
Insertion Sort aşamaları:
Adım 1: [22, 27, 16, 2, 18, 6]
Adım 2: [16, 22, 27, 2, 18, 6]
Adım 3: [2, 16, 22, 27, 18, 6]
Adım 4: [2, 16, 18, 22, 27, 6]
Adım 5: [2, 6, 16, 18, 22, 27]

Big-O gösterimi: O(n^2)

Time Complexity: Dizi sıralandıktan sonra 18 sayısı Average Case'e girer. Çünkü average case'de aranan elemanın ortada olması durumunda dizi üzerinde n/2 karşılaştırma yapılır ve ortalama n/2 adım gereklidir. Bu durumda 18 sayısı ortada olduğu için Average Case'e girer.

Proje 2:
Dizi: [16, 21, 11, 8, 12, 22]
Merge Sort aşamaları:
Adım 1: [16, 21, 11], [8, 12, 22]
Adım 2: [16, 21], [11], [8, 12], [22]
Adım 3: [16], [21], [11], [8], [12], [22]
Adım 4: [11, 16], [8, 21], [12, 22]
Adım 5: [8, 11, 16, 21], [12, 22]
Adım 6: [8, 11, 12, 16, 21, 22]

Big-O gösterimi: O(n log n)

Proje 3:
Dizi: [7, 5, 1, 8, 3, 6, 0, 9, 4, 2]
Binary-Search-Tree aşamaları:
Adım 1: Root 7'dir. Sağından 8 bulunur.
Adım 2: 8'in solunda 5 bulunur, sağından 9 bulunur.
Adım 3: 5'in solunda 1 bulunur, sağından 3 bulunur. 9'un solunda 6 bulunur.
Adım 4: 1'in sağından 2 bulunur. 3'ün sağından 4 bulunur.
Adım 5: 9'un sağından 0 bulunur.

Ağaç yapısı:
7
/
5 8
/ \
1 6 9
\ /
3 0
2
